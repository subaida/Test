<?xml version="1.0" encoding="iso-8859-1"?><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<title>FusionCharts v3 Documentation</title>
<link rel="stylesheet" href="Style.css" type="text/css" />
</head>

<body>
<table width="98%" border="0" cellspacing="0" cellpadding="3" align="center">
  <tr> 
    <td><span class="pageHeader">dataXML method</span></td>
  </tr>
  <tr> 
    <td valign="top" class="text"><p>In our previous example, we had used the 
        <span class="codeInline">dataURL</span> method to provide data to FusionMaps. 
        In dataURL method, the data is contained in an external physical XML document 
        (like <span class="codeInline">Data.xml</span>) or relayed by a URL (like 
        <span class="codeInline">ReturnXMLData.asp</span>). </p>
      <p>There also exists another method to provide the XML data to FusionMaps 
        - <span class="codeInline"><strong>dataXML</strong></span><strong> method</strong>.      </p>
      <p>In this method, the XML Data exists in the same HTML page in which FusionMaps 
        is embedded. When working with this method, you don't need to create the 
        external XML document (like <span class="codeInline">Data.xml</span>). 
        Instead you provide it in the HTML page. </p>
      <p>Let's quickly see an example of the above.</p></td>
  </tr>
  <tr> 
    <td valign="top" class="text">&nbsp;</td>
  </tr>
  <tr> 
    <td valign="top" class="header">Using dataXML method</td>
  </tr>
  <tr> 
    <td valign="top" class="text">Create a copy of our previous <span class="codeInline">FirstMap.html</span> and name it as <span class="codeInline">DataXMLMap.html</span> with the following code: </td>
  </tr>
  <tr> 
    <td valign="top" class="codeBlock"><p>&lt;html&gt;<br />
      &lt;head&gt;<br />
      &nbsp;&nbsp;&nbsp;&lt;title&gt;My First Map using dataXML Method&lt;/title&gt;<br />
      &nbsp;&nbsp;&nbsp;&lt;script language=&quot;JavaScript&quot; src=&quot;FusionMaps.js&quot;&gt;&lt;/script&gt;<br />
      &lt;/head&gt;</p>
      <p>&lt;body&gt;
        &nbsp;&nbsp;&nbsp;<br />
  &nbsp;&nbsp;&nbsp;&lt;div id=&quot;mapdiv&quot; align=&quot;center&quot;&gt; <br />
        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FusionMaps.<br />
  &nbsp;&nbsp;&nbsp;&lt;/div&gt;<br />
  &nbsp;&nbsp;&nbsp;&lt;script type=&quot;text/javascript&quot;&gt;<br />
        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var map = new FusionMaps(&quot;FCMap_World.swf&quot;, &quot;Map1Id&quot;, &quot;750&quot;, &quot;400&quot;, &quot;0&quot;, &quot;0&quot;);<br />
        <strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;map.setDataXML(&quot;&lt;map borderColor='005879' fillColor='D7F4FF' numberSuffix=' Mill.' includeValueInLabels='1' labelSepChar=': ' baseFontSize='9'&gt;&lt;data&gt;	&lt;entity id='NA' value='515' /&gt;&lt;entity id='SA' value='373' /&gt;&lt;entity id='AS' value='3875' /&gt;&lt;entity id='EU' value='727' /&gt;&lt;entity id='AF' value='885' /&gt;&lt;entity id='AU' value='32' /&gt;&lt;/data&gt;&lt;/map&gt;&quot;);</strong><br />
        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;map.render(&quot;mapdiv&quot;);<br />
  &nbsp;&nbsp;&nbsp;&lt;/script&gt;<br />
  &lt;/body&gt;<br />
  &lt;/html&gt;</p>
      </td>
  </tr>
  <tr> 
    <td valign="top" class="text"><p>You can clearly see above, that instead of 
        using <span class="codeInline">setDataURL</span> method to provide the 
        path of XML file, here we've used <span class="codeInline">setDataXML</span> 
        method to provide the full XML data itself.</p>
      <p>When you now view the map, you'll get the same output as before.</p></td>
  </tr>
  <tr> 
    <td valign="top" class="text">&nbsp;</td>
  </tr>
  <tr> 
    <td valign="top" class="highlightBlock">With this method, however, there can 
      sometimes be problems when you're working with larger chunks of data. This 
      problem happens due to the limitation on <span class="codeInline">dataXML</span> 
      string length imposed by the browser. When you specify a larger chunk of 
      data using <span class="codeInline">dataXML</span> method, the browser ignores 
      everything after a certain length. This causes FusionMaps to hang (nothing 
      would be displayed on-screen) as the full data has not been supplied to 
      it. Therefore, <span class="codeInline">dataURL</span> method is recommended 
      for larger chunks of data.</td>
  </tr>
  <tr>
    <td valign="top" class="text">&nbsp;</td>
  </tr>
</table>
</body>
</html>
